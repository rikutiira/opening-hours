{"version":3,"sources":["i18n/localize.js","styles.js","components/AspectRatio.js","assets/icons/time.svg","components/Icon.js","components/Panel.js","utils/time.js","features/OpeningHours/utils/formatOpeningHours.js","features/OpeningHours/OpeningHours.styles.js","features/OpeningHours/OpeningHours.js","App.js","serviceWorker.js","index.js"],"names":["LocalizationContext","React","createContext","localize","R","lang","key","path","split","localizations","LocalizationProvider","children","Provider","value","colors","sizes","fonts","StyledAspectRatioOuter","styled","div","props","height","StyledAspectRatioInner","AspectRatio","ratio","width","getHeight","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fillOpacity","d","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","StyledIcon","size","color","icons","time","component","Time","Icon","name","IconComponent","defaultProps","StyledPanel","styles","Panel","style","toReadableTime","hours","minutes","timePart","convertSecondsTo12HourFormat","seconds","Math","floor","time24","map","Number","suffix","days","flattenHoursInOrder","openingHours","day","Boolean","pairOpeningHoursByDay","OpeningHours","Header","OpeningHoursRow","DayPart","TodayTag","OpeningHoursPart","renderDayPart","idx","Date","getDay","isToday","renderOpeningHours","data","row","hasOpeningHours","openingHour","closingHour","convertTime","renderOpeningHoursPart","useContext","useLocalize","openingHoursByDay","formatOpeningHours","maxHeight","overflow","marginLeft","renderHeader","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35807ac4.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport * as R from 'ramda'\nimport localizations from './localizations.json'\n\nconst LocalizationContext = React.createContext();\n\nconst localize = R.curry((lang, key) => {\n  const path = [...key.split('.'), lang]\n\n  return R.path(path, localizations)\n})\n\nexport const LocalizationProvider = ({ children, lang }) => (\n  <LocalizationContext.Provider value={{ lang }}>\n    {children}\n  </LocalizationContext.Provider>\n)\n\nexport const useLocalize = () => {\n  const { lang } = useContext(LocalizationContext)\n\n  return localize(lang)\n}","export const colors = {\n  dark: '#202125',\n  white: '#fff',\n  green: '#5bcb02',\n  grey01: '#f8f8f8',\n  grey02: '#eeeeee',\n  grey03: '#a1a2a4'\n}\n\nexport const sizes = {\n  large: '2.5rem',\n  medium: '0.8rem',\n  small: '0.4rem'\n}\n\nexport const fonts = {\n  large: '1.5rem/1.875rem Roboto', // 24px / 30px\n  normal: '1rem/1.375rem Roboto', // 16px / 22px\n  small: '0.75rem/1rem Roboto' // 12px / 16px\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst StyledAspectRatioOuter = styled.div`\n  width: 100%;\n  height: 0;\n  padding-bottom: ${props => props.height};\n  position: relative;\n`\n\nconst StyledAspectRatioInner = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`\n\nconst getHeight = ratio => {\n  const [width, height] = ratio.split(':')\n\n  return `${(height / width) * 100}%`\n}\n\nconst AspectRatio = ({ children, ratio }) => {\n  const height = getHeight(ratio)\n\n  return (\n    <StyledAspectRatioOuter height={height}>\n      <StyledAspectRatioInner>\n        {children}\n      </StyledAspectRatioInner>\n    </StyledAspectRatioOuter>\n  )\n}\n\nAspectRatio.propTypes = {\n  children: PropTypes.any.isRequired,\n  ratio: PropTypes.string.isRequired\n}\n\nexport default AspectRatio\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fillOpacity: 0.9\n}, React.createElement(\"path\", {\n  d: \"M255.8 48C141 48 48 141.2 48 256s93 208 207.8 208c115 0 208.2-93.2 208.2-208S370.8 48 255.8 48zm.2 374.4c-91.9 0-166.4-74.5-166.4-166.4S164.1 89.6 256 89.6 422.4 164.1 422.4 256 347.9 422.4 256 422.4z\"\n}), React.createElement(\"path\", {\n  d: \"M266.4 152h-31.2v124.8l109.2 65.5 15.6-25.6-93.6-55.5V152z\"\n}));\n\nvar SvgTime = function SvgTime(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTime, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/time.130e75e7.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport AspectRatio from './AspectRatio'\nimport { ReactComponent as Time } from 'assets/icons/time.svg';\n\nconst StyledIcon = styled.div`\n  display: block;\n  width: ${props => props.size};\n\n  .iconOuter {\n    display: block;\n    width: 100%;\n    height: 0;\n    position: relative;\n\n    .iconInner {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n\n  svg {\n    display: block;\n  }\n\n  svg,\n  svg * {\n    fill: ${props => {\n      return props.color;\n    }}\n  }\n`\n\nconst icons = {\n  time: {\n    component: Time,\n    ratio: '1:1'\n  }\n}\n\nconst Icon = ({ name, color, size }) => {\n  const IconComponent = icons[name].component\n\n  return (\n    <StyledIcon color={color} size={size}>\n      {/* Set height using aspect ratio trick to fix SVG rendering issues for IE11 */}\n      <AspectRatio ratio={icons[name].ratio}>\n        <IconComponent />\n      </AspectRatio>\n    </StyledIcon>\n  )\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  size: PropTypes.string\n}\n\nIcon.defaultProps = {\n  color: 'inherit',\n  size: '100%'\n}\n\nexport default Icon\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport * as styles from 'styles'\n\nconst StyledPanel = styled.div`\n  background: ${styles.colors.white};\n  padding: ${styles.sizes.large};\n  border-radius: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`\n\nconst Panel = ({ children, style }) => {\n  return (\n    <StyledPanel style={style}>\n      {children}\n    </StyledPanel>\n  )\n}\n\nPanel.propTypes = {\n  children: PropTypes.any.isRequired,\n  style: PropTypes.object\n}\n\nexport default Panel","import * as R from 'ramda'\n\nconst addTrailingZero = timePart => timePart < 10 ? `0${timePart}` : timePart\n\nconst toReadableTime = (hours, minutes) =>\n  minutes\n    ? `${hours}:${addTrailingZero(minutes)}`\n    : `${hours}`\n\nexport const convertSecondsTo24Format = seconds => {\n  const hours = Math.floor(seconds / 3600)\n  const minutes = Math.floor(seconds % 3600 / 60)\n\n  return toReadableTime(hours, minutes)\n}\n\nexport const convert24HourTo12HourFormat = time24 => {\n  const [hours, minutes] = time24.split(':').map(Number)\n  const suffix = hours < 12 || hours === 24 ? 'AM' : 'PM'\n  const hours12 = hours % 12 || 12\n\n  return `${toReadableTime(hours12, minutes)} ${suffix}`\n}\n\nexport const convertSecondsTo12HourFormat = R.pipe(\n  convertSecondsTo24Format,\n  convert24HourTo12HourFormat\n)","import * as R from 'ramda'\n\nconst days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n\nconst flattenHoursInOrder = R.pipe(\n  R.mapObjIndexed((openingHours, day) => openingHours.map(R.merge({ day }))),\n  R.props(days),\n  R.filter(Boolean),\n  R.unnest,\n  R.when(R.pathSatisfies(R.equals('close'), [0, 'type']), R.move(0, -1)),\n)\n\nconst pairOpeningHoursByDay = R.pipe(\n  R.splitEvery(2),\n  R.groupBy(R.path([0, 'day']))\n)\n\nexport default (openingHours) => {\n  const openingHoursByDay = R.pipe(\n    flattenHoursInOrder,\n    pairOpeningHoursByDay\n  )(openingHours)\n\n  return days.map((day) => ({\n    day,\n    openingHours: openingHoursByDay[day] || []\n  }))\n}","import styled from 'styled-components'\nimport * as styles from 'styles'\n\nexport const OpeningHours = styled.div`\n  width: 500px;\n  max-width: 90%;\n  margin: 0 auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n`\n\nexport const Header = styled.div`\n  flex: 0 0 auto;\n  font: ${styles.fonts.large};\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  padding-bottom: ${styles.sizes.medium};\n  border-bottom: 1px solid ${styles.colors.dark};\n`\n\nexport const OpeningHoursRow = styled.div`\n  font: ${styles.fonts.normal};\n  display: flex;\n  padding: ${styles.sizes.medium} 0;\n  border-bottom: 1px solid #EEEEEE;\n  align-items: flex-start;\n`\nexport const DayPart = styled.div`\n  flex: 1 0 0%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 500;\n`\n\nexport const TodayTag = styled.div`\n  font: ${styles.fonts.small};\n  font-weight: 700;\n  color: ${styles.colors.green};\n  margin-left: ${styles.sizes.medium};\n  text-transform: uppercase;\n`\n\nexport const OpeningHoursPart = styled.div`\n  display: flex;\n  flex-flow: column;\n  text-align: right;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as styles from 'styles'\nimport { Panel, Icon } from 'components'\nimport { convertSecondsTo12HourFormat as convertTime } from 'utils/time'\nimport { useLocalize } from 'i18n/localize'\nimport formatOpeningHours from './utils/formatOpeningHours'\nimport * as Styled from './OpeningHours.styles'\n\n/**\n * It's assumed that we can use user's timezone\n */\nconst isToday = idx => (idx + 1) % 7 === new Date().getDay()\n\nconst renderDayPart = (day, idx, localize) => {\n  return (\n    <Styled.DayPart>\n      <div>{localize(`weekdays.${day}`)}</div>\n      {isToday(idx) && (\n        <Styled.TodayTag>{localize('today')}</Styled.TodayTag>\n      )}\n    </Styled.DayPart>\n  )\n}\n\nconst renderOpeningHoursPart = openingHours => {\n  const hasOpeningHours = !!openingHours.length\n\n  return (\n    <Styled.OpeningHoursPart>\n      {hasOpeningHours\n        ? openingHours.map(([openingHour, closingHour]) => (\n          <span key={openingHour.value}>\n            {convertTime(openingHour.value)} - {convertTime(closingHour.value)}\n          </span>\n        ))\n        : <span style={{ color: styles.colors.grey03 }}>Closed</span>\n      }\n    </Styled.OpeningHoursPart>\n  )\n}\n\nconst renderHeader = (localize) => (\n  <Styled.Header>\n    <Icon name=\"time\" color={styles.colors.grey03} size=\"1.5rem\" />\n    <div style={{ marginLeft: styles.sizes.medium }}>{localize('openingHours')}</div>\n  </Styled.Header>\n)\n\nconst renderOpeningHours = (data, localize) =>\n  data.map((row, idx) => {\n    const { day, openingHours } = row\n\n    return (\n      <Styled.OpeningHoursRow key={day}>\n        {renderDayPart(day, idx, localize)}\n        {renderOpeningHoursPart(openingHours)}\n      </Styled.OpeningHoursRow>\n    )\n  })\n\nconst OpeningHours = ({ openingHours }) => {\n  const localize = useLocalize()\n  const data = formatOpeningHours(openingHours)\n\n  return (\n    <Styled.OpeningHours>\n      <Panel style={{ maxHeight: '80vh', overflow: 'auto' }}>\n        {renderHeader(localize)}\n        {renderOpeningHours(data, localize)}\n      </Panel>\n    </Styled.OpeningHours>\n  )\n}\n\nOpeningHours.propTypes = {\n  openingHours: PropTypes.object.isRequired\n}\n\nexport default OpeningHours","import React from 'react'\nimport { LocalizationProvider } from 'i18n/localize'\nimport openingHours from 'assets/json/openingHours.json'\nimport { OpeningHours } from './features'\n\nconst App = () => {\n  return (\n    <LocalizationProvider lang=\"en\">\n      <OpeningHours openingHours={openingHours} />\n    </LocalizationProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}